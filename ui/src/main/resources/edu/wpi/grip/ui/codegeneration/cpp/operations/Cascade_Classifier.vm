	/**
	* Runs a cascade classifier on an image.
	*
	* @param input          the image to run the classifier on
	* @param classifierFile the full path to the classifier XML file
    * @param scaleFactor    the scale factor of each successive downsized image
    * @param minNeighbors   how many neighbors each candidate rectangle should have to retain it
    * @param minSize        the minimum possible object size
    * @param maxSize        the maximum possible object size. If (0, 0), it is assumed to be unbounded
    * @param detections     the vector of Rects to store the detected regions in
	*/
	void $fileName::#func($step ["input", "classifierFile", "scaleFactor", "minNeighbors", "minSize", "maxSize", "detections"]) {
		CascadeClassfier classifier;
		if (!classifier.load(classifierFile)) {
			// Could not load that file
			return;
		}
		classifier.detectMultiScale(input, detections, scaleFactor, minNeighbors, 0, minSize, maxSize);
	}